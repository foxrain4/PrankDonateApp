<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Prank Donate App</title>
  <style>
    body {
      font-family: sans-serif;
      background: #111;
      color: #fff;
      text-align: center;
      padding: 20px;
    }
    h1 {
      font-size: 2em;
    }
    .progress-container {
      width: 80%;
      background-color: #333;
      border-radius: 10px;
      margin: 20px auto;
      height: 30px;
      overflow: hidden;
    }
    .progress-bar {
      height: 100%;
      background-color: #4caf50;
      width: 0%;
      transition: width 0.5s ease;
    }
    .donate-button {
      background-color: #6200ea;
      color: white;
      padding: 12px 24px;
      border: none;
      border-radius: 8px;
      font-size: 18px;
      cursor: pointer;
      margin-top: 10px;
    }
    .donation-input {
      margin-top: 20px;
      font-size: 18px;
      padding: 10px;
      width: 200px;
      border-radius: 6px;
      border: none;
    }
    .section {
      margin-top: 40px;
    }
    .celebration {
      color: #ffeb3b;
      font-size: 1.5em;
      margin-top: 20px;
      animation: pop 1s ease-out infinite alternate;
    }
    .tier-display {
      font-size: 1.2em;
      margin-top: 10px;
      color: #f0db4f;
    }
    @keyframes pop {
      0% { transform: scale(1); }
      100% { transform: scale(1.05); }
    }
  </style>
</head>
<body>
  <h1>Help Fund Our Website</h1>
  <p>Goal: $1,000,000,000 (resets monthly)</p>
  <div class="progress-container">
    <div id="progress" class="progress-bar"></div>
  </div>
  <p>Total Donations: <strong id="donationAmount">$0</strong></p>
  <div id="celebrationMessage"></div>

  <input id="donationInput" class="donation-input" type="number" min="1" placeholder="Enter amount to donate" />
  <button id="donateBtn" class="donate-button">Donate</button>

  <div class="section">
    <h2>Your Contributions</h2>
    <p>Total You've Donated: <strong id="yourDonation">$0</strong></p>
    <div id="userTier" class="tier-display"></div>
  </div>

  <script type="module">
    import { initializeApp } from 'https://www.gstatic.com/firebasejs/11.6.0/firebase-app.js';
    import { getFirestore, doc, getDoc, setDoc, updateDoc, increment } from 'https://www.gstatic.com/firebasejs/11.6.0/firebase-firestore.js';

    const firebaseConfig = {
      apiKey: "AIzaSyALJhbe82ShQAT0MFzlxiYqiiVbfmyTZDU",
      authDomain: "prankdonateapp.firebaseapp.com",
      projectId: "prankdonateapp",
      storageBucket: "prankdonateapp.appspot.com",
      messagingSenderId: "146707436054",
      appId: "1:146707436054:web:259fed523c0450b098db37",
      measurementId: "G-FG2CPMN2PF"
    };

    const app = initializeApp(firebaseConfig);
    const db = getFirestore(app);

    const donationDisplay = document.getElementById('donationAmount');
    const progressBar = document.getElementById('progress');
    const yourDonationDisplay = document.getElementById('yourDonation');
    const donateBtn = document.getElementById('donateBtn');
    const donationInput = document.getElementById('donationInput');
    const celebrationMessage = document.getElementById('celebrationMessage');
    const userTier = document.getElementById('userTier');

    const GOAL = 1_000_000_000;

    function getTierLabel(amount) {
      if (amount >= 10000) return "ðŸŽ† Mythic Legend";
      if (amount >= 1000) return "ðŸ‘‘ Platinum Backer";
      if (amount >= 500) return "ðŸ¥‡ Gold Supporter";
      if (amount >= 100) return "ðŸ¥ˆ Silver Supporter";
      if (amount >= 1) return "ðŸ¥‰ Bronze Supporter";
      return "ðŸ’¤ No Tier Yet";
    }

    function updateUserTierDisplay(amount) {
      userTier.textContent = `Your Tier: ${getTierLabel(amount)}`;
    }

    async function maybeResetMonthly(docRef) {
      const now = new Date();
      const currentMonth = now.getMonth();
      const currentYear = now.getFullYear();

      const docSnap = await getDoc(docRef);
      if (docSnap.exists()) {
        const data = docSnap.data();
        const lastReset = data.lastReset ? new Date(data.lastReset.seconds * 1000) : null;
        if (!lastReset || lastReset.getMonth() !== currentMonth || lastReset.getFullYear() !== currentYear) {
          await setDoc(docRef, { amount: 0, lastReset: new Date() });
          return 0;
        }
        return data.amount;
      } else {
        await setDoc(docRef, { amount: 0, lastReset: new Date() });
        return 0;
      }
    }

    async function updateDisplay() {
      const docRef = doc(db, 'counter', 'totaldonations');
      const total = await maybeResetMonthly(docRef);

      donationDisplay.textContent = `$${total.toLocaleString()}`;
      const progressPercent = Math.min((total / GOAL) * 100, 100);
      progressBar.style.width = `${progressPercent}%`;

      if (total >= GOAL) {
        celebrationMessage.innerHTML = "ðŸŽ‰ <span class='celebration'>Funding Goal Achieved! Thank You!</span> ðŸŽ‰";
      } else {
        celebrationMessage.innerHTML = '';
      }
    }

    donateBtn.addEventListener('click', async () => {
      const donation = parseInt(donationInput.value);
      if (isNaN(donation) || donation <= 0) {
        alert('Please enter a valid donation amount.');
        return;
      }

      const docRef = doc(db, 'counter', 'totaldonations');
      const snap = await getDoc(docRef);
      if (!snap.exists()) {
        await setDoc(docRef, { amount: 0, lastReset: new Date() });
      }

      await updateDoc(docRef, {
        amount: increment(donation)
      });

      const currentUserTotal = parseInt(localStorage.getItem('yourDonation') || '0') + donation;
      localStorage.setItem('yourDonation', currentUserTotal);
      yourDonationDisplay.textContent = `$${currentUserTotal.toLocaleString()}`;
      updateUserTierDisplay(currentUserTotal);

      updateDisplay();
      donationInput.value = '';
    });

    window.onload = () => {
      updateDisplay();
      const userTotal = parseInt(localStorage.getItem('yourDonation') || '0');
      yourDonationDisplay.textContent = `$${userTotal.toLocaleString()}`;
      updateUserTierDisplay(userTotal);
    };
  </script>
</body>
</html>
